<?xml version="1.0" encoding="UTF-8"?>
<knimeNode icon="tf2writer.png" type="Sink"
	xmlns="http://knime.org/node/v4.1"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://knime.org/node/v4.1 http://knime.org/node/v4.1.xsd">
	<name>TensorFlow 2 Network Writer</name>

	<shortDescription>
		Writes a TensorFlow 2 Network to a file or directory.
	</shortDescription>

	<fullDescription>
		<intro>
			Writes a TensorFlow 2 Model to a file or directory. The file extension
			determines the format of the written file. If
			<b>no file extension</b>
			is given the model is saved in the
			<b>SavedModel</b>
			format. If the file extension
			<b>.h5</b>
			is given the model is saved in the
			<b>HDF5</b>
			format. If the file extension
			<b>.zip</b>
			is given the model is in the
			<b>SavedModel format and compressed as a ZIP file</b>
			.
			<p>
				<i>
					The KNIME Deep Learning - TensorFlow 2 Integration is developed by
					KNIME and uses the TensorFlow 2 library. The KNIME Deep Learning -
					TensorFlow 2 Integration is not endorsed by or otherwise affiliated
					with Google. TensorFlow, the TensorFlow logo and any related marks
					are trademarks of Google Inc.
				</i>
			</p>
		</intro>
		<option name="Write to">
			Select a file system in which you want to store the file. There
			are
			four default file system options to choose from:
			<br />
			<ul>
				<li>Local File System: Allows you to select a location in your
					local
					system.
				</li>
				<li>Relative to: Allows you to choose whether to resolve the path
					relative to the workflow, mountpoint or node.
				</li>
				<li>Mountpoint: Allows you to choose a mountpoint. Whenever this is
					selected, a new drop-down menu appears to choose from available
					mountpoints.
				</li>
				<li>Custom URL: Uses the standard URL handler providing the ability
					to write a file to URLs (e.g. file, http or KNIME protocol).
					Browsing is disabled for this option.
				</li>
			</ul>
			It is possible to use other file systems with this node. Therefore,
			you have to enable the file system connection input port of this node
			by clicking the
			<b>...</b>
			in the bottom left corner of the node's icon and choose
			<i>Add File System Connection port</i>
			.
			<br />
			Afterwards, you can simply connect the desired connector node to the
			reader node. The file system connection will then be shown in the
			drop down menu.
		</option>
		<option name="File/URL">
			Enter a valid destination. Depending on the selected file system this
			is either a path (used by
			<i>Local File System</i>
			,
			<i>Relative to</i>
			,
			<i>Mountpoint</i>
			options and custom file systems added by specific connector nodes) or
			a URL (used by
			<i>Custom URL</i>
			option).
			<br />
			A path usually starts with a slash (/) character and does not contain
			a protocol.
			You can also choose a previously selected file from
			the
			drop-down list, or select a destination from the
			&quot;Browse...&quot; dialog (browsing is not available for custom
			URLs).
		</option>
		<option name="Timeout (ms)">
			Timeout in milliseconds when connecting to remote resources / writing
			remote files.
			<tt>0</tt>
			means no
			timeout. In case it takes longer to connect to the host /
			write the file, the
			node fails to
			execute.
			<br />
			<i>Note</i>
			: This option is only active in case that the
			<i>Custom URL</i>
			file system is selected. Other file
			systems don't use a timeout or the
			timeout is set directly in the specific
			connector node.
		</option>
		<option name="Overwrite">Select when existing files should be
			overwritten.
			If this option is unchecked, the node will fail if a
			file already
			exists.
		</option>
	</fullDescription>


	<ports>
		<inPort index="0" name="TensorFlow 2 network">The TensorFlow 2 network.</inPort>
		<dynInPort insert-before="0" name="File system connection"
			group-identifier="File System Connection">
			The file system connection.
		</dynInPort>
	</ports>
</knimeNode>